apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: go-message-app
spec:
  replicas: 1
  selector:
    matchLabels: { app: auth }
  template:
    metadata:
      labels: { app: auth }
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:16-alpine
          command: ['sh', '-c', 'until pg_isready -h db -p 5432; do echo waiting for database; sleep 2; done;']
      containers:
        - name: auth
          image: go-message-app-auth:latest
          imagePullPolicy: Never
          envFrom:
            - configMapRef: { name: app-config }
            - secretRef:    { name: app-secret }
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: auth
  namespace: go-message-app
spec:
  selector: { app: auth }
  ports:
    - port: 8080
      targetPort: 8080
