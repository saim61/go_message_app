apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: go-message-app
spec:
  replicas: 1
  selector:
    matchLabels: { app: gateway }
  template:
    metadata:
      labels: { app: gateway }
    spec:
      initContainers:
        - name: wait-for-kafka
          image: apache/kafka:4.0.0
          command: ['sh', '-c', 'until /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092; do echo waiting for kafka; sleep 2; done;']
        - name: wait-for-auth
          image: curlimages/curl:latest
          command: ['sh', '-c', 'until curl -f http://auth:8080/health; do echo waiting for auth service; sleep 2; done;']
      containers:
        - name: gateway
          image: go-message-app-gateway:latest
          imagePullPolicy: Never
          envFrom:
            - configMapRef: { name: app-config }
            - secretRef:    { name: app-secret }
          ports:
            - containerPort: 8081
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: go-message-app
spec:
  selector: { app: gateway }
  ports:
    - name: ws
      port: 8081
      targetPort: 8081
